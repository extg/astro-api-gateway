/*
 * Sputnik v2 API
 * Sputnik v2 API Backend Server
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package api.app.astrodao.com.openapi.models;

import java.util.Objects;
import java.util.Arrays;
import api.app.astrodao.com.openapi.models.Notification;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AccountNotification
 */
@JsonPropertyOrder({
  AccountNotification.JSON_PROPERTY_ID,
  AccountNotification.JSON_PROPERTY_NOTIFICATION_ID,
  AccountNotification.JSON_PROPERTY_NOTIFICATION,
  AccountNotification.JSON_PROPERTY_ACCOUNT_ID,
  AccountNotification.JSON_PROPERTY_IS_MUTED,
  AccountNotification.JSON_PROPERTY_IS_READ
})
@JsonTypeName("AccountNotification")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-23T12:57:16.263593+02:00[Europe/Kiev]")
public class AccountNotification {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NOTIFICATION_ID = "notificationId";
  private String notificationId;

  public static final String JSON_PROPERTY_NOTIFICATION = "notification";
  private Notification notification;

  public static final String JSON_PROPERTY_ACCOUNT_ID = "accountId";
  private String accountId;

  public static final String JSON_PROPERTY_IS_MUTED = "isMuted";
  private Boolean isMuted;

  public static final String JSON_PROPERTY_IS_READ = "isRead";
  private Boolean isRead;

  public AccountNotification() { 
  }

  public AccountNotification id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public AccountNotification notificationId(String notificationId) {
    
    this.notificationId = notificationId;
    return this;
  }

   /**
   * Get notificationId
   * @return notificationId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NOTIFICATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getNotificationId() {
    return notificationId;
  }


  @JsonProperty(JSON_PROPERTY_NOTIFICATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNotificationId(String notificationId) {
    this.notificationId = notificationId;
  }


  public AccountNotification notification(Notification notification) {
    
    this.notification = notification;
    return this;
  }

   /**
   * Get notification
   * @return notification
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NOTIFICATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Notification getNotification() {
    return notification;
  }


  @JsonProperty(JSON_PROPERTY_NOTIFICATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNotification(Notification notification) {
    this.notification = notification;
  }


  public AccountNotification accountId(String accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAccountId() {
    return accountId;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public AccountNotification isMuted(Boolean isMuted) {
    
    this.isMuted = isMuted;
    return this;
  }

   /**
   * Get isMuted
   * @return isMuted
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_IS_MUTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsMuted() {
    return isMuted;
  }


  @JsonProperty(JSON_PROPERTY_IS_MUTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsMuted(Boolean isMuted) {
    this.isMuted = isMuted;
  }


  public AccountNotification isRead(Boolean isRead) {
    
    this.isRead = isRead;
    return this;
  }

   /**
   * Get isRead
   * @return isRead
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_IS_READ)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsRead() {
    return isRead;
  }


  @JsonProperty(JSON_PROPERTY_IS_READ)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsRead(Boolean isRead) {
    this.isRead = isRead;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountNotification accountNotification = (AccountNotification) o;
    return Objects.equals(this.id, accountNotification.id) &&
        Objects.equals(this.notificationId, accountNotification.notificationId) &&
        Objects.equals(this.notification, accountNotification.notification) &&
        Objects.equals(this.accountId, accountNotification.accountId) &&
        Objects.equals(this.isMuted, accountNotification.isMuted) &&
        Objects.equals(this.isRead, accountNotification.isRead);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, notificationId, notification, accountId, isMuted, isRead);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountNotification {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    notificationId: ").append(toIndentedString(notificationId)).append("\n");
    sb.append("    notification: ").append(toIndentedString(notification)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    isMuted: ").append(toIndentedString(isMuted)).append("\n");
    sb.append("    isRead: ").append(toIndentedString(isRead)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

