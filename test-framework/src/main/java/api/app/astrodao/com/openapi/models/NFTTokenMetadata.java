/*
 * Sputnik v2 API
 * Sputnik v2 API Backend Server
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package api.app.astrodao.com.openapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * NFTTokenMetadata
 */
@JsonPropertyOrder({
  NFTTokenMetadata.JSON_PROPERTY_TOKEN_ID,
  NFTTokenMetadata.JSON_PROPERTY_COPIES,
  NFTTokenMetadata.JSON_PROPERTY_DESCRIPTION,
  NFTTokenMetadata.JSON_PROPERTY_EXPIRES_AT,
  NFTTokenMetadata.JSON_PROPERTY_EXTRA,
  NFTTokenMetadata.JSON_PROPERTY_ISSUED_AT,
  NFTTokenMetadata.JSON_PROPERTY_MEDIA,
  NFTTokenMetadata.JSON_PROPERTY_MEDIA_HASH,
  NFTTokenMetadata.JSON_PROPERTY_REFERENCE,
  NFTTokenMetadata.JSON_PROPERTY_REFERENCE_HASH,
  NFTTokenMetadata.JSON_PROPERTY_STARTS_AT,
  NFTTokenMetadata.JSON_PROPERTY_TITLE,
  NFTTokenMetadata.JSON_PROPERTY_UPDATED_AT,
  NFTTokenMetadata.JSON_PROPERTY_APPROVED_ACCOUNT_IDS
})
@JsonTypeName("NFTTokenMetadata")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-23T12:57:16.263593+02:00[Europe/Kiev]")
public class NFTTokenMetadata {
  public static final String JSON_PROPERTY_TOKEN_ID = "tokenId";
  private String tokenId;

  public static final String JSON_PROPERTY_COPIES = "copies";
  private BigDecimal copies;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_EXPIRES_AT = "expiresAt";
  private String expiresAt;

  public static final String JSON_PROPERTY_EXTRA = "extra";
  private String extra;

  public static final String JSON_PROPERTY_ISSUED_AT = "issuedAt";
  private String issuedAt;

  public static final String JSON_PROPERTY_MEDIA = "media";
  private String media;

  public static final String JSON_PROPERTY_MEDIA_HASH = "mediaHash";
  private String mediaHash;

  public static final String JSON_PROPERTY_REFERENCE = "reference";
  private String reference;

  public static final String JSON_PROPERTY_REFERENCE_HASH = "referenceHash";
  private String referenceHash;

  public static final String JSON_PROPERTY_STARTS_AT = "startsAt";
  private String startsAt;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  private String updatedAt;

  public static final String JSON_PROPERTY_APPROVED_ACCOUNT_IDS = "approvedAccountIds";
  private List<String> approvedAccountIds = new ArrayList<>();

  public NFTTokenMetadata() { 
  }

  public NFTTokenMetadata tokenId(String tokenId) {
    
    this.tokenId = tokenId;
    return this;
  }

   /**
   * Get tokenId
   * @return tokenId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TOKEN_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTokenId() {
    return tokenId;
  }


  @JsonProperty(JSON_PROPERTY_TOKEN_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTokenId(String tokenId) {
    this.tokenId = tokenId;
  }


  public NFTTokenMetadata copies(BigDecimal copies) {
    
    this.copies = copies;
    return this;
  }

   /**
   * Get copies
   * @return copies
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_COPIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getCopies() {
    return copies;
  }


  @JsonProperty(JSON_PROPERTY_COPIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCopies(BigDecimal copies) {
    this.copies = copies;
  }


  public NFTTokenMetadata description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public NFTTokenMetadata expiresAt(String expiresAt) {
    
    this.expiresAt = expiresAt;
    return this;
  }

   /**
   * Get expiresAt
   * @return expiresAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_EXPIRES_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExpiresAt() {
    return expiresAt;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRES_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExpiresAt(String expiresAt) {
    this.expiresAt = expiresAt;
  }


  public NFTTokenMetadata extra(String extra) {
    
    this.extra = extra;
    return this;
  }

   /**
   * Get extra
   * @return extra
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_EXTRA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExtra() {
    return extra;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExtra(String extra) {
    this.extra = extra;
  }


  public NFTTokenMetadata issuedAt(String issuedAt) {
    
    this.issuedAt = issuedAt;
    return this;
  }

   /**
   * Get issuedAt
   * @return issuedAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ISSUED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIssuedAt() {
    return issuedAt;
  }


  @JsonProperty(JSON_PROPERTY_ISSUED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIssuedAt(String issuedAt) {
    this.issuedAt = issuedAt;
  }


  public NFTTokenMetadata media(String media) {
    
    this.media = media;
    return this;
  }

   /**
   * Get media
   * @return media
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MEDIA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMedia() {
    return media;
  }


  @JsonProperty(JSON_PROPERTY_MEDIA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMedia(String media) {
    this.media = media;
  }


  public NFTTokenMetadata mediaHash(String mediaHash) {
    
    this.mediaHash = mediaHash;
    return this;
  }

   /**
   * Get mediaHash
   * @return mediaHash
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MEDIA_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMediaHash() {
    return mediaHash;
  }


  @JsonProperty(JSON_PROPERTY_MEDIA_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMediaHash(String mediaHash) {
    this.mediaHash = mediaHash;
  }


  public NFTTokenMetadata reference(String reference) {
    
    this.reference = reference;
    return this;
  }

   /**
   * Get reference
   * @return reference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getReference() {
    return reference;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReference(String reference) {
    this.reference = reference;
  }


  public NFTTokenMetadata referenceHash(String referenceHash) {
    
    this.referenceHash = referenceHash;
    return this;
  }

   /**
   * Get referenceHash
   * @return referenceHash
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_REFERENCE_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getReferenceHash() {
    return referenceHash;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReferenceHash(String referenceHash) {
    this.referenceHash = referenceHash;
  }


  public NFTTokenMetadata startsAt(String startsAt) {
    
    this.startsAt = startsAt;
    return this;
  }

   /**
   * Get startsAt
   * @return startsAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_STARTS_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStartsAt() {
    return startsAt;
  }


  @JsonProperty(JSON_PROPERTY_STARTS_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStartsAt(String startsAt) {
    this.startsAt = startsAt;
  }


  public NFTTokenMetadata title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTitle(String title) {
    this.title = title;
  }


  public NFTTokenMetadata updatedAt(String updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  public NFTTokenMetadata approvedAccountIds(List<String> approvedAccountIds) {
    
    this.approvedAccountIds = approvedAccountIds;
    return this;
  }

  public NFTTokenMetadata addApprovedAccountIdsItem(String approvedAccountIdsItem) {
    this.approvedAccountIds.add(approvedAccountIdsItem);
    return this;
  }

   /**
   * Get approvedAccountIds
   * @return approvedAccountIds
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_APPROVED_ACCOUNT_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getApprovedAccountIds() {
    return approvedAccountIds;
  }


  @JsonProperty(JSON_PROPERTY_APPROVED_ACCOUNT_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setApprovedAccountIds(List<String> approvedAccountIds) {
    this.approvedAccountIds = approvedAccountIds;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NFTTokenMetadata nfTTokenMetadata = (NFTTokenMetadata) o;
    return Objects.equals(this.tokenId, nfTTokenMetadata.tokenId) &&
        Objects.equals(this.copies, nfTTokenMetadata.copies) &&
        Objects.equals(this.description, nfTTokenMetadata.description) &&
        Objects.equals(this.expiresAt, nfTTokenMetadata.expiresAt) &&
        Objects.equals(this.extra, nfTTokenMetadata.extra) &&
        Objects.equals(this.issuedAt, nfTTokenMetadata.issuedAt) &&
        Objects.equals(this.media, nfTTokenMetadata.media) &&
        Objects.equals(this.mediaHash, nfTTokenMetadata.mediaHash) &&
        Objects.equals(this.reference, nfTTokenMetadata.reference) &&
        Objects.equals(this.referenceHash, nfTTokenMetadata.referenceHash) &&
        Objects.equals(this.startsAt, nfTTokenMetadata.startsAt) &&
        Objects.equals(this.title, nfTTokenMetadata.title) &&
        Objects.equals(this.updatedAt, nfTTokenMetadata.updatedAt) &&
        Objects.equals(this.approvedAccountIds, nfTTokenMetadata.approvedAccountIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tokenId, copies, description, expiresAt, extra, issuedAt, media, mediaHash, reference, referenceHash, startsAt, title, updatedAt, approvedAccountIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NFTTokenMetadata {\n");
    sb.append("    tokenId: ").append(toIndentedString(tokenId)).append("\n");
    sb.append("    copies: ").append(toIndentedString(copies)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    extra: ").append(toIndentedString(extra)).append("\n");
    sb.append("    issuedAt: ").append(toIndentedString(issuedAt)).append("\n");
    sb.append("    media: ").append(toIndentedString(media)).append("\n");
    sb.append("    mediaHash: ").append(toIndentedString(mediaHash)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    referenceHash: ").append(toIndentedString(referenceHash)).append("\n");
    sb.append("    startsAt: ").append(toIndentedString(startsAt)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    approvedAccountIds: ").append(toIndentedString(approvedAccountIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

