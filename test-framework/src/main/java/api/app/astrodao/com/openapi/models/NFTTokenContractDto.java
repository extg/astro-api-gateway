/*
 * Sputnik v2 API
 * Sputnik v2 API Backend Server
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package api.app.astrodao.com.openapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * NFTTokenContractDto
 */
@JsonPropertyOrder({
  NFTTokenContractDto.JSON_PROPERTY_ID,
  NFTTokenContractDto.JSON_PROPERTY_SPEC,
  NFTTokenContractDto.JSON_PROPERTY_OWNER_ID,
  NFTTokenContractDto.JSON_PROPERTY_MINTER,
  NFTTokenContractDto.JSON_PROPERTY_BASE_URI,
  NFTTokenContractDto.JSON_PROPERTY_SYMBOL,
  NFTTokenContractDto.JSON_PROPERTY_ICON,
  NFTTokenContractDto.JSON_PROPERTY_REFERENCE,
  NFTTokenContractDto.JSON_PROPERTY_REFERENCE_HASH
})
@JsonTypeName("NFTTokenContractDto")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-23T12:57:16.263593+02:00[Europe/Kiev]")
public class NFTTokenContractDto {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_SPEC = "spec";
  private String spec;

  public static final String JSON_PROPERTY_OWNER_ID = "ownerId";
  private String ownerId;

  public static final String JSON_PROPERTY_MINTER = "minter";
  private String minter;

  public static final String JSON_PROPERTY_BASE_URI = "baseUri";
  private String baseUri;

  public static final String JSON_PROPERTY_SYMBOL = "symbol";
  private String symbol;

  public static final String JSON_PROPERTY_ICON = "icon";
  private String icon;

  public static final String JSON_PROPERTY_REFERENCE = "reference";
  private String reference;

  public static final String JSON_PROPERTY_REFERENCE_HASH = "referenceHash";
  private String referenceHash;

  public NFTTokenContractDto() { 
  }

  public NFTTokenContractDto id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public NFTTokenContractDto spec(String spec) {
    
    this.spec = spec;
    return this;
  }

   /**
   * Get spec
   * @return spec
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SPEC)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSpec() {
    return spec;
  }


  @JsonProperty(JSON_PROPERTY_SPEC)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSpec(String spec) {
    this.spec = spec;
  }


  public NFTTokenContractDto ownerId(String ownerId) {
    
    this.ownerId = ownerId;
    return this;
  }

   /**
   * Get ownerId
   * @return ownerId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_OWNER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOwnerId() {
    return ownerId;
  }


  @JsonProperty(JSON_PROPERTY_OWNER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOwnerId(String ownerId) {
    this.ownerId = ownerId;
  }


  public NFTTokenContractDto minter(String minter) {
    
    this.minter = minter;
    return this;
  }

   /**
   * Get minter
   * @return minter
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MINTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMinter() {
    return minter;
  }


  @JsonProperty(JSON_PROPERTY_MINTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMinter(String minter) {
    this.minter = minter;
  }


  public NFTTokenContractDto baseUri(String baseUri) {
    
    this.baseUri = baseUri;
    return this;
  }

   /**
   * Get baseUri
   * @return baseUri
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_BASE_URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBaseUri() {
    return baseUri;
  }


  @JsonProperty(JSON_PROPERTY_BASE_URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBaseUri(String baseUri) {
    this.baseUri = baseUri;
  }


  public NFTTokenContractDto symbol(String symbol) {
    
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSymbol() {
    return symbol;
  }


  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }


  public NFTTokenContractDto icon(String icon) {
    
    this.icon = icon;
    return this;
  }

   /**
   * Get icon
   * @return icon
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ICON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIcon() {
    return icon;
  }


  @JsonProperty(JSON_PROPERTY_ICON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIcon(String icon) {
    this.icon = icon;
  }


  public NFTTokenContractDto reference(String reference) {
    
    this.reference = reference;
    return this;
  }

   /**
   * Get reference
   * @return reference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getReference() {
    return reference;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReference(String reference) {
    this.reference = reference;
  }


  public NFTTokenContractDto referenceHash(String referenceHash) {
    
    this.referenceHash = referenceHash;
    return this;
  }

   /**
   * Get referenceHash
   * @return referenceHash
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_REFERENCE_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getReferenceHash() {
    return referenceHash;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReferenceHash(String referenceHash) {
    this.referenceHash = referenceHash;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NFTTokenContractDto nfTTokenContractDto = (NFTTokenContractDto) o;
    return Objects.equals(this.id, nfTTokenContractDto.id) &&
        Objects.equals(this.spec, nfTTokenContractDto.spec) &&
        Objects.equals(this.ownerId, nfTTokenContractDto.ownerId) &&
        Objects.equals(this.minter, nfTTokenContractDto.minter) &&
        Objects.equals(this.baseUri, nfTTokenContractDto.baseUri) &&
        Objects.equals(this.symbol, nfTTokenContractDto.symbol) &&
        Objects.equals(this.icon, nfTTokenContractDto.icon) &&
        Objects.equals(this.reference, nfTTokenContractDto.reference) &&
        Objects.equals(this.referenceHash, nfTTokenContractDto.referenceHash);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, spec, ownerId, minter, baseUri, symbol, icon, reference, referenceHash);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NFTTokenContractDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    spec: ").append(toIndentedString(spec)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("    minter: ").append(toIndentedString(minter)).append("\n");
    sb.append("    baseUri: ").append(toIndentedString(baseUri)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    referenceHash: ").append(toIndentedString(referenceHash)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

