/*
 * Sputnik v2 API
 * Sputnik v2 API Backend Server
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package api.app.astrodao.com.openapi.models;

import java.util.Objects;
import java.util.Arrays;
import api.app.astrodao.com.openapi.models.ActionCall;
import api.app.astrodao.com.openapi.models.Bounty;
import api.app.astrodao.com.openapi.models.DaoConfig;
import api.app.astrodao.com.openapi.models.PolicyDto;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ProposalKindSwaggerDto
 */
@JsonPropertyOrder({
  ProposalKindSwaggerDto.JSON_PROPERTY_TYPE,
  ProposalKindSwaggerDto.JSON_PROPERTY_CONFIG,
  ProposalKindSwaggerDto.JSON_PROPERTY_POLICY,
  ProposalKindSwaggerDto.JSON_PROPERTY_MEMBER_ID,
  ProposalKindSwaggerDto.JSON_PROPERTY_ROLE,
  ProposalKindSwaggerDto.JSON_PROPERTY_RECEIVER_ID,
  ProposalKindSwaggerDto.JSON_PROPERTY_ACTIONS,
  ProposalKindSwaggerDto.JSON_PROPERTY_HASH,
  ProposalKindSwaggerDto.JSON_PROPERTY_METHOD_NAME,
  ProposalKindSwaggerDto.JSON_PROPERTY_TOKEN_ID,
  ProposalKindSwaggerDto.JSON_PROPERTY_MSG,
  ProposalKindSwaggerDto.JSON_PROPERTY_STAKING_ID,
  ProposalKindSwaggerDto.JSON_PROPERTY_BOUNTY,
  ProposalKindSwaggerDto.JSON_PROPERTY_BOUNTY_ID
})
@JsonTypeName("ProposalKindSwaggerDto")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-23T12:57:16.263593+02:00[Europe/Kiev]")
public class ProposalKindSwaggerDto {
  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    CHANGECONFIG("ChangeConfig"),
    
    CHANGEPOLICY("ChangePolicy"),
    
    ADDMEMBERTOROLE("AddMemberToRole"),
    
    REMOVEMEMBERFROMROLE("RemoveMemberFromRole"),
    
    FUNCTIONCALL("FunctionCall"),
    
    UPGRADESELF("UpgradeSelf"),
    
    UPGRADEREMOTE("UpgradeRemote"),
    
    TRANSFER("Transfer"),
    
    SETSTAKINGCONTRACT("SetStakingContract"),
    
    ADDBOUNTY("AddBounty"),
    
    BOUNTYDONE("BountyDone"),
    
    VOTE("Vote");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_CONFIG = "config";
  private DaoConfig config;

  public static final String JSON_PROPERTY_POLICY = "policy";
  private PolicyDto policy;

  public static final String JSON_PROPERTY_MEMBER_ID = "memberId";
  private String memberId;

  public static final String JSON_PROPERTY_ROLE = "role";
  private String role;

  public static final String JSON_PROPERTY_RECEIVER_ID = "receiverId";
  private String receiverId;

  public static final String JSON_PROPERTY_ACTIONS = "actions";
  private List<ActionCall> actions = new ArrayList<>();

  public static final String JSON_PROPERTY_HASH = "hash";
  private String hash;

  public static final String JSON_PROPERTY_METHOD_NAME = "methodName";
  private String methodName;

  public static final String JSON_PROPERTY_TOKEN_ID = "tokenId";
  private String tokenId;

  public static final String JSON_PROPERTY_MSG = "msg";
  private String msg;

  public static final String JSON_PROPERTY_STAKING_ID = "stakingId";
  private String stakingId;

  public static final String JSON_PROPERTY_BOUNTY = "bounty";
  private Bounty bounty;

  public static final String JSON_PROPERTY_BOUNTY_ID = "bountyId";
  private String bountyId;

  public ProposalKindSwaggerDto() { 
  }

  public ProposalKindSwaggerDto type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public ProposalKindSwaggerDto config(DaoConfig config) {
    
    this.config = config;
    return this;
  }

   /**
   * For type: ChangeConfig
   * @return config
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "For type: ChangeConfig")
  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DaoConfig getConfig() {
    return config;
  }


  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConfig(DaoConfig config) {
    this.config = config;
  }


  public ProposalKindSwaggerDto policy(PolicyDto policy) {
    
    this.policy = policy;
    return this;
  }

   /**
   * For type: ChangePolicy
   * @return policy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "For type: ChangePolicy")
  @JsonProperty(JSON_PROPERTY_POLICY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PolicyDto getPolicy() {
    return policy;
  }


  @JsonProperty(JSON_PROPERTY_POLICY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPolicy(PolicyDto policy) {
    this.policy = policy;
  }


  public ProposalKindSwaggerDto memberId(String memberId) {
    
    this.memberId = memberId;
    return this;
  }

   /**
   * For type: AddMemberToRole or RemoveMemberFromRole
   * @return memberId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "For type: AddMemberToRole or RemoveMemberFromRole")
  @JsonProperty(JSON_PROPERTY_MEMBER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMemberId() {
    return memberId;
  }


  @JsonProperty(JSON_PROPERTY_MEMBER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMemberId(String memberId) {
    this.memberId = memberId;
  }


  public ProposalKindSwaggerDto role(String role) {
    
    this.role = role;
    return this;
  }

   /**
   * For type: AddMemberToRole or RemoveMemberFromRole
   * @return role
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "For type: AddMemberToRole or RemoveMemberFromRole")
  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRole() {
    return role;
  }


  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRole(String role) {
    this.role = role;
  }


  public ProposalKindSwaggerDto receiverId(String receiverId) {
    
    this.receiverId = receiverId;
    return this;
  }

   /**
   * For type: FunctionCall or UpgradeRemoteor Transferor BountyDone
   * @return receiverId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "For type: FunctionCall or UpgradeRemoteor Transferor BountyDone")
  @JsonProperty(JSON_PROPERTY_RECEIVER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getReceiverId() {
    return receiverId;
  }


  @JsonProperty(JSON_PROPERTY_RECEIVER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReceiverId(String receiverId) {
    this.receiverId = receiverId;
  }


  public ProposalKindSwaggerDto actions(List<ActionCall> actions) {
    
    this.actions = actions;
    return this;
  }

  public ProposalKindSwaggerDto addActionsItem(ActionCall actionsItem) {
    this.actions.add(actionsItem);
    return this;
  }

   /**
   * For type: FunctionCall
   * @return actions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "For type: FunctionCall")
  @JsonProperty(JSON_PROPERTY_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ActionCall> getActions() {
    return actions;
  }


  @JsonProperty(JSON_PROPERTY_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setActions(List<ActionCall> actions) {
    this.actions = actions;
  }


  public ProposalKindSwaggerDto hash(String hash) {
    
    this.hash = hash;
    return this;
  }

   /**
   * For type: UpgradeSelfor UpgradeRemote
   * @return hash
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "For type: UpgradeSelfor UpgradeRemote")
  @JsonProperty(JSON_PROPERTY_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getHash() {
    return hash;
  }


  @JsonProperty(JSON_PROPERTY_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHash(String hash) {
    this.hash = hash;
  }


  public ProposalKindSwaggerDto methodName(String methodName) {
    
    this.methodName = methodName;
    return this;
  }

   /**
   * For type: UpgradeRemote
   * @return methodName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "For type: UpgradeRemote")
  @JsonProperty(JSON_PROPERTY_METHOD_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMethodName() {
    return methodName;
  }


  @JsonProperty(JSON_PROPERTY_METHOD_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMethodName(String methodName) {
    this.methodName = methodName;
  }


  public ProposalKindSwaggerDto tokenId(String tokenId) {
    
    this.tokenId = tokenId;
    return this;
  }

   /**
   * For type: Transfer
   * @return tokenId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "For type: Transfer")
  @JsonProperty(JSON_PROPERTY_TOKEN_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTokenId() {
    return tokenId;
  }


  @JsonProperty(JSON_PROPERTY_TOKEN_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTokenId(String tokenId) {
    this.tokenId = tokenId;
  }


  public ProposalKindSwaggerDto msg(String msg) {
    
    this.msg = msg;
    return this;
  }

   /**
   * For type: Transfer
   * @return msg
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "For type: Transfer")
  @JsonProperty(JSON_PROPERTY_MSG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMsg() {
    return msg;
  }


  @JsonProperty(JSON_PROPERTY_MSG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMsg(String msg) {
    this.msg = msg;
  }


  public ProposalKindSwaggerDto stakingId(String stakingId) {
    
    this.stakingId = stakingId;
    return this;
  }

   /**
   * For type: SetStakingContract
   * @return stakingId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "For type: SetStakingContract")
  @JsonProperty(JSON_PROPERTY_STAKING_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStakingId() {
    return stakingId;
  }


  @JsonProperty(JSON_PROPERTY_STAKING_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStakingId(String stakingId) {
    this.stakingId = stakingId;
  }


  public ProposalKindSwaggerDto bounty(Bounty bounty) {
    
    this.bounty = bounty;
    return this;
  }

   /**
   * For type: AddBounty
   * @return bounty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "For type: AddBounty")
  @JsonProperty(JSON_PROPERTY_BOUNTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Bounty getBounty() {
    return bounty;
  }


  @JsonProperty(JSON_PROPERTY_BOUNTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBounty(Bounty bounty) {
    this.bounty = bounty;
  }


  public ProposalKindSwaggerDto bountyId(String bountyId) {
    
    this.bountyId = bountyId;
    return this;
  }

   /**
   * For type: BountyDone
   * @return bountyId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "For type: BountyDone")
  @JsonProperty(JSON_PROPERTY_BOUNTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBountyId() {
    return bountyId;
  }


  @JsonProperty(JSON_PROPERTY_BOUNTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBountyId(String bountyId) {
    this.bountyId = bountyId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProposalKindSwaggerDto proposalKindSwaggerDto = (ProposalKindSwaggerDto) o;
    return Objects.equals(this.type, proposalKindSwaggerDto.type) &&
        Objects.equals(this.config, proposalKindSwaggerDto.config) &&
        Objects.equals(this.policy, proposalKindSwaggerDto.policy) &&
        Objects.equals(this.memberId, proposalKindSwaggerDto.memberId) &&
        Objects.equals(this.role, proposalKindSwaggerDto.role) &&
        Objects.equals(this.receiverId, proposalKindSwaggerDto.receiverId) &&
        Objects.equals(this.actions, proposalKindSwaggerDto.actions) &&
        Objects.equals(this.hash, proposalKindSwaggerDto.hash) &&
        Objects.equals(this.methodName, proposalKindSwaggerDto.methodName) &&
        Objects.equals(this.tokenId, proposalKindSwaggerDto.tokenId) &&
        Objects.equals(this.msg, proposalKindSwaggerDto.msg) &&
        Objects.equals(this.stakingId, proposalKindSwaggerDto.stakingId) &&
        Objects.equals(this.bounty, proposalKindSwaggerDto.bounty) &&
        Objects.equals(this.bountyId, proposalKindSwaggerDto.bountyId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, config, policy, memberId, role, receiverId, actions, hash, methodName, tokenId, msg, stakingId, bounty, bountyId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProposalKindSwaggerDto {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    policy: ").append(toIndentedString(policy)).append("\n");
    sb.append("    memberId: ").append(toIndentedString(memberId)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    receiverId: ").append(toIndentedString(receiverId)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    methodName: ").append(toIndentedString(methodName)).append("\n");
    sb.append("    tokenId: ").append(toIndentedString(tokenId)).append("\n");
    sb.append("    msg: ").append(toIndentedString(msg)).append("\n");
    sb.append("    stakingId: ").append(toIndentedString(stakingId)).append("\n");
    sb.append("    bounty: ").append(toIndentedString(bounty)).append("\n");
    sb.append("    bountyId: ").append(toIndentedString(bountyId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

