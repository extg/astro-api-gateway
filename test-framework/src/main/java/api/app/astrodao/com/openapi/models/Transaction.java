/*
 * Sputnik v2 API
 * Sputnik v2 API Backend Server
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package api.app.astrodao.com.openapi.models;

import java.util.Objects;
import java.util.Arrays;
import api.app.astrodao.com.openapi.models.TransactionAction;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Transaction
 */
@JsonPropertyOrder({
  Transaction.JSON_PROPERTY_TRANSACTION_HASH,
  Transaction.JSON_PROPERTY_TRANSACTION_ACTION,
  Transaction.JSON_PROPERTY_RECEIPTS,
  Transaction.JSON_PROPERTY_RECEIVER_ACCOUNT_ID,
  Transaction.JSON_PROPERTY_SIGNER_ACCOUNT_ID,
  Transaction.JSON_PROPERTY_STATUS,
  Transaction.JSON_PROPERTY_RECEIPT_CONVERSION_GAS_BURNT,
  Transaction.JSON_PROPERTY_RECEIPT_CONVERSION_TOKENS_BURNT,
  Transaction.JSON_PROPERTY_BLOCK_TIMESTAMP
})
@JsonTypeName("Transaction")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-23T12:57:16.263593+02:00[Europe/Kiev]")
public class Transaction {
  public static final String JSON_PROPERTY_TRANSACTION_HASH = "transactionHash";
  private String transactionHash;

  public static final String JSON_PROPERTY_TRANSACTION_ACTION = "transactionAction";
  private TransactionAction transactionAction;

  public static final String JSON_PROPERTY_RECEIPTS = "receipts";
  private List<List> receipts = new ArrayList<>();

  public static final String JSON_PROPERTY_RECEIVER_ACCOUNT_ID = "receiverAccountId";
  private String receiverAccountId;

  public static final String JSON_PROPERTY_SIGNER_ACCOUNT_ID = "signerAccountId";
  private String signerAccountId;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    UNKNOWN("Unknown"),
    
    FAILURE("Failure"),
    
    SUCCESSVALUE("SuccessValue"),
    
    SUCCESSRECEIPTID("SuccessReceiptId");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_RECEIPT_CONVERSION_GAS_BURNT = "receiptConversionGasBurnt";
  private String receiptConversionGasBurnt;

  public static final String JSON_PROPERTY_RECEIPT_CONVERSION_TOKENS_BURNT = "receiptConversionTokensBurnt";
  private String receiptConversionTokensBurnt;

  public static final String JSON_PROPERTY_BLOCK_TIMESTAMP = "blockTimestamp";
  private BigDecimal blockTimestamp;

  public Transaction() { 
  }

  public Transaction transactionHash(String transactionHash) {
    
    this.transactionHash = transactionHash;
    return this;
  }

   /**
   * Get transactionHash
   * @return transactionHash
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TRANSACTION_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTransactionHash() {
    return transactionHash;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransactionHash(String transactionHash) {
    this.transactionHash = transactionHash;
  }


  public Transaction transactionAction(TransactionAction transactionAction) {
    
    this.transactionAction = transactionAction;
    return this;
  }

   /**
   * Get transactionAction
   * @return transactionAction
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TRANSACTION_ACTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TransactionAction getTransactionAction() {
    return transactionAction;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_ACTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransactionAction(TransactionAction transactionAction) {
    this.transactionAction = transactionAction;
  }


  public Transaction receipts(List<List> receipts) {
    
    this.receipts = receipts;
    return this;
  }

  public Transaction addReceiptsItem(List receiptsItem) {
    this.receipts.add(receiptsItem);
    return this;
  }

   /**
   * Get receipts
   * @return receipts
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_RECEIPTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<List> getReceipts() {
    return receipts;
  }


  @JsonProperty(JSON_PROPERTY_RECEIPTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReceipts(List<List> receipts) {
    this.receipts = receipts;
  }


  public Transaction receiverAccountId(String receiverAccountId) {
    
    this.receiverAccountId = receiverAccountId;
    return this;
  }

   /**
   * Get receiverAccountId
   * @return receiverAccountId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_RECEIVER_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getReceiverAccountId() {
    return receiverAccountId;
  }


  @JsonProperty(JSON_PROPERTY_RECEIVER_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReceiverAccountId(String receiverAccountId) {
    this.receiverAccountId = receiverAccountId;
  }


  public Transaction signerAccountId(String signerAccountId) {
    
    this.signerAccountId = signerAccountId;
    return this;
  }

   /**
   * Get signerAccountId
   * @return signerAccountId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SIGNER_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSignerAccountId() {
    return signerAccountId;
  }


  @JsonProperty(JSON_PROPERTY_SIGNER_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSignerAccountId(String signerAccountId) {
    this.signerAccountId = signerAccountId;
  }


  public Transaction status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public Transaction receiptConversionGasBurnt(String receiptConversionGasBurnt) {
    
    this.receiptConversionGasBurnt = receiptConversionGasBurnt;
    return this;
  }

   /**
   * Get receiptConversionGasBurnt
   * @return receiptConversionGasBurnt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_RECEIPT_CONVERSION_GAS_BURNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getReceiptConversionGasBurnt() {
    return receiptConversionGasBurnt;
  }


  @JsonProperty(JSON_PROPERTY_RECEIPT_CONVERSION_GAS_BURNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReceiptConversionGasBurnt(String receiptConversionGasBurnt) {
    this.receiptConversionGasBurnt = receiptConversionGasBurnt;
  }


  public Transaction receiptConversionTokensBurnt(String receiptConversionTokensBurnt) {
    
    this.receiptConversionTokensBurnt = receiptConversionTokensBurnt;
    return this;
  }

   /**
   * Get receiptConversionTokensBurnt
   * @return receiptConversionTokensBurnt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_RECEIPT_CONVERSION_TOKENS_BURNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getReceiptConversionTokensBurnt() {
    return receiptConversionTokensBurnt;
  }


  @JsonProperty(JSON_PROPERTY_RECEIPT_CONVERSION_TOKENS_BURNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReceiptConversionTokensBurnt(String receiptConversionTokensBurnt) {
    this.receiptConversionTokensBurnt = receiptConversionTokensBurnt;
  }


  public Transaction blockTimestamp(BigDecimal blockTimestamp) {
    
    this.blockTimestamp = blockTimestamp;
    return this;
  }

   /**
   * Get blockTimestamp
   * @return blockTimestamp
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_BLOCK_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getBlockTimestamp() {
    return blockTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_BLOCK_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBlockTimestamp(BigDecimal blockTimestamp) {
    this.blockTimestamp = blockTimestamp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Transaction transaction = (Transaction) o;
    return Objects.equals(this.transactionHash, transaction.transactionHash) &&
        Objects.equals(this.transactionAction, transaction.transactionAction) &&
        Objects.equals(this.receipts, transaction.receipts) &&
        Objects.equals(this.receiverAccountId, transaction.receiverAccountId) &&
        Objects.equals(this.signerAccountId, transaction.signerAccountId) &&
        Objects.equals(this.status, transaction.status) &&
        Objects.equals(this.receiptConversionGasBurnt, transaction.receiptConversionGasBurnt) &&
        Objects.equals(this.receiptConversionTokensBurnt, transaction.receiptConversionTokensBurnt) &&
        Objects.equals(this.blockTimestamp, transaction.blockTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactionHash, transactionAction, receipts, receiverAccountId, signerAccountId, status, receiptConversionGasBurnt, receiptConversionTokensBurnt, blockTimestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Transaction {\n");
    sb.append("    transactionHash: ").append(toIndentedString(transactionHash)).append("\n");
    sb.append("    transactionAction: ").append(toIndentedString(transactionAction)).append("\n");
    sb.append("    receipts: ").append(toIndentedString(receipts)).append("\n");
    sb.append("    receiverAccountId: ").append(toIndentedString(receiverAccountId)).append("\n");
    sb.append("    signerAccountId: ").append(toIndentedString(signerAccountId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    receiptConversionGasBurnt: ").append(toIndentedString(receiptConversionGasBurnt)).append("\n");
    sb.append("    receiptConversionTokensBurnt: ").append(toIndentedString(receiptConversionTokensBurnt)).append("\n");
    sb.append("    blockTimestamp: ").append(toIndentedString(blockTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

