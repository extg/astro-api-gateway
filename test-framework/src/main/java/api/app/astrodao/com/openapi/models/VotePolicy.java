/*
 * Sputnik v2 API
 * Sputnik v2 API Backend Server
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package api.app.astrodao.com.openapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * VotePolicy
 */
@JsonPropertyOrder({
  VotePolicy.JSON_PROPERTY_WEIGHT_KIND,
  VotePolicy.JSON_PROPERTY_QUORUM,
  VotePolicy.JSON_PROPERTY_KIND,
  VotePolicy.JSON_PROPERTY_WEIGHT,
  VotePolicy.JSON_PROPERTY_RATIO
})
@JsonTypeName("VotePolicy")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-23T12:57:16.263593+02:00[Europe/Kiev]")
public class VotePolicy {
  /**
   * Gets or Sets weightKind
   */
  public enum WeightKindEnum {
    TOKENWEIGHT("TokenWeight"),
    
    ROLEWEIGHT("RoleWeight");

    private String value;

    WeightKindEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static WeightKindEnum fromValue(String value) {
      for (WeightKindEnum b : WeightKindEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_WEIGHT_KIND = "weightKind";
  private WeightKindEnum weightKind;

  public static final String JSON_PROPERTY_QUORUM = "quorum";
  private BigDecimal quorum;

  /**
   * Gets or Sets kind
   */
  public enum KindEnum {
    WEIGHT("Weight"),
    
    RATIO("Ratio");

    private String value;

    KindEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static KindEnum fromValue(String value) {
      for (KindEnum b : KindEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_KIND = "kind";
  private KindEnum kind;

  public static final String JSON_PROPERTY_WEIGHT = "weight";
  private BigDecimal weight;

  public static final String JSON_PROPERTY_RATIO = "ratio";
  private List<String> ratio = new ArrayList<>();

  public VotePolicy() { 
  }

  public VotePolicy weightKind(WeightKindEnum weightKind) {
    
    this.weightKind = weightKind;
    return this;
  }

   /**
   * Get weightKind
   * @return weightKind
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_WEIGHT_KIND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public WeightKindEnum getWeightKind() {
    return weightKind;
  }


  @JsonProperty(JSON_PROPERTY_WEIGHT_KIND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWeightKind(WeightKindEnum weightKind) {
    this.weightKind = weightKind;
  }


  public VotePolicy quorum(BigDecimal quorum) {
    
    this.quorum = quorum;
    return this;
  }

   /**
   * Get quorum
   * @return quorum
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_QUORUM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getQuorum() {
    return quorum;
  }


  @JsonProperty(JSON_PROPERTY_QUORUM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setQuorum(BigDecimal quorum) {
    this.quorum = quorum;
  }


  public VotePolicy kind(KindEnum kind) {
    
    this.kind = kind;
    return this;
  }

   /**
   * Get kind
   * @return kind
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_KIND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public KindEnum getKind() {
    return kind;
  }


  @JsonProperty(JSON_PROPERTY_KIND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKind(KindEnum kind) {
    this.kind = kind;
  }


  public VotePolicy weight(BigDecimal weight) {
    
    this.weight = weight;
    return this;
  }

   /**
   * Get weight
   * @return weight
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getWeight() {
    return weight;
  }


  @JsonProperty(JSON_PROPERTY_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWeight(BigDecimal weight) {
    this.weight = weight;
  }


  public VotePolicy ratio(List<String> ratio) {
    
    this.ratio = ratio;
    return this;
  }

  public VotePolicy addRatioItem(String ratioItem) {
    this.ratio.add(ratioItem);
    return this;
  }

   /**
   * Get ratio
   * @return ratio
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_RATIO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getRatio() {
    return ratio;
  }


  @JsonProperty(JSON_PROPERTY_RATIO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRatio(List<String> ratio) {
    this.ratio = ratio;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VotePolicy votePolicy = (VotePolicy) o;
    return Objects.equals(this.weightKind, votePolicy.weightKind) &&
        Objects.equals(this.quorum, votePolicy.quorum) &&
        Objects.equals(this.kind, votePolicy.kind) &&
        Objects.equals(this.weight, votePolicy.weight) &&
        Objects.equals(this.ratio, votePolicy.ratio);
  }

  @Override
  public int hashCode() {
    return Objects.hash(weightKind, quorum, kind, weight, ratio);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VotePolicy {\n");
    sb.append("    weightKind: ").append(toIndentedString(weightKind)).append("\n");
    sb.append("    quorum: ").append(toIndentedString(quorum)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    ratio: ").append(toIndentedString(ratio)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

