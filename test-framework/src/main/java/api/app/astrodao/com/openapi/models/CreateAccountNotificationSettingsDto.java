/*
 * Sputnik v2 API
 * Sputnik v2 API Backend Server
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package api.app.astrodao.com.openapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateAccountNotificationSettingsDto
 */
@JsonPropertyOrder({
  CreateAccountNotificationSettingsDto.JSON_PROPERTY_ACCOUNT_ID,
  CreateAccountNotificationSettingsDto.JSON_PROPERTY_PUBLIC_KEY,
  CreateAccountNotificationSettingsDto.JSON_PROPERTY_SIGNATURE,
  CreateAccountNotificationSettingsDto.JSON_PROPERTY_DAO_ID,
  CreateAccountNotificationSettingsDto.JSON_PROPERTY_TYPES,
  CreateAccountNotificationSettingsDto.JSON_PROPERTY_MUTED_UNTIL_TIMESTAMP,
  CreateAccountNotificationSettingsDto.JSON_PROPERTY_IS_ALL_MUTED
})
@JsonTypeName("CreateAccountNotificationSettingsDto")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-23T12:57:16.263593+02:00[Europe/Kiev]")
public class CreateAccountNotificationSettingsDto {
  public static final String JSON_PROPERTY_ACCOUNT_ID = "accountId";
  private String accountId;

  public static final String JSON_PROPERTY_PUBLIC_KEY = "publicKey";
  private String publicKey;

  public static final String JSON_PROPERTY_SIGNATURE = "signature";
  private String signature;

  public static final String JSON_PROPERTY_DAO_ID = "daoId";
  private String daoId;

  public static final String JSON_PROPERTY_TYPES = "types";
  private List<String> types = new ArrayList<>();

  public static final String JSON_PROPERTY_MUTED_UNTIL_TIMESTAMP = "mutedUntilTimestamp";
  private String mutedUntilTimestamp;

  public static final String JSON_PROPERTY_IS_ALL_MUTED = "isAllMuted";
  private Boolean isAllMuted;

  public CreateAccountNotificationSettingsDto() { 
  }

  public CreateAccountNotificationSettingsDto accountId(String accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAccountId() {
    return accountId;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public CreateAccountNotificationSettingsDto publicKey(String publicKey) {
    
    this.publicKey = publicKey;
    return this;
  }

   /**
   * Get publicKey
   * @return publicKey
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PUBLIC_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPublicKey() {
    return publicKey;
  }


  @JsonProperty(JSON_PROPERTY_PUBLIC_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPublicKey(String publicKey) {
    this.publicKey = publicKey;
  }


  public CreateAccountNotificationSettingsDto signature(String signature) {
    
    this.signature = signature;
    return this;
  }

   /**
   * Get signature
   * @return signature
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SIGNATURE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSignature() {
    return signature;
  }


  @JsonProperty(JSON_PROPERTY_SIGNATURE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSignature(String signature) {
    this.signature = signature;
  }


  public CreateAccountNotificationSettingsDto daoId(String daoId) {
    
    this.daoId = daoId;
    return this;
  }

   /**
   * Get daoId
   * @return daoId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DAO_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDaoId() {
    return daoId;
  }


  @JsonProperty(JSON_PROPERTY_DAO_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDaoId(String daoId) {
    this.daoId = daoId;
  }


  public CreateAccountNotificationSettingsDto types(List<String> types) {
    
    this.types = types;
    return this;
  }

  public CreateAccountNotificationSettingsDto addTypesItem(String typesItem) {
    this.types.add(typesItem);
    return this;
  }

   /**
   * Get types
   * @return types
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TYPES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getTypes() {
    return types;
  }


  @JsonProperty(JSON_PROPERTY_TYPES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTypes(List<String> types) {
    this.types = types;
  }


  public CreateAccountNotificationSettingsDto mutedUntilTimestamp(String mutedUntilTimestamp) {
    
    this.mutedUntilTimestamp = mutedUntilTimestamp;
    return this;
  }

   /**
   * Get mutedUntilTimestamp
   * @return mutedUntilTimestamp
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MUTED_UNTIL_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMutedUntilTimestamp() {
    return mutedUntilTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_MUTED_UNTIL_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMutedUntilTimestamp(String mutedUntilTimestamp) {
    this.mutedUntilTimestamp = mutedUntilTimestamp;
  }


  public CreateAccountNotificationSettingsDto isAllMuted(Boolean isAllMuted) {
    
    this.isAllMuted = isAllMuted;
    return this;
  }

   /**
   * Get isAllMuted
   * @return isAllMuted
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_IS_ALL_MUTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsAllMuted() {
    return isAllMuted;
  }


  @JsonProperty(JSON_PROPERTY_IS_ALL_MUTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsAllMuted(Boolean isAllMuted) {
    this.isAllMuted = isAllMuted;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAccountNotificationSettingsDto createAccountNotificationSettingsDto = (CreateAccountNotificationSettingsDto) o;
    return Objects.equals(this.accountId, createAccountNotificationSettingsDto.accountId) &&
        Objects.equals(this.publicKey, createAccountNotificationSettingsDto.publicKey) &&
        Objects.equals(this.signature, createAccountNotificationSettingsDto.signature) &&
        Objects.equals(this.daoId, createAccountNotificationSettingsDto.daoId) &&
        Objects.equals(this.types, createAccountNotificationSettingsDto.types) &&
        Objects.equals(this.mutedUntilTimestamp, createAccountNotificationSettingsDto.mutedUntilTimestamp) &&
        Objects.equals(this.isAllMuted, createAccountNotificationSettingsDto.isAllMuted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, publicKey, signature, daoId, types, mutedUntilTimestamp, isAllMuted);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAccountNotificationSettingsDto {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    publicKey: ").append(toIndentedString(publicKey)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("    daoId: ").append(toIndentedString(daoId)).append("\n");
    sb.append("    types: ").append(toIndentedString(types)).append("\n");
    sb.append("    mutedUntilTimestamp: ").append(toIndentedString(mutedUntilTimestamp)).append("\n");
    sb.append("    isAllMuted: ").append(toIndentedString(isAllMuted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

