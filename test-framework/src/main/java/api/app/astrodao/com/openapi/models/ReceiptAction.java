/*
 * Sputnik v2 API
 * Sputnik v2 API Backend Server
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package api.app.astrodao.com.openapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ReceiptAction
 */
@JsonPropertyOrder({
  ReceiptAction.JSON_PROPERTY_RECEIPT_ID,
  ReceiptAction.JSON_PROPERTY_INDEX_IN_ACTION_RECEIPT,
  ReceiptAction.JSON_PROPERTY_RECEIPT_PREDECESSOR_ACCOUNT_ID,
  ReceiptAction.JSON_PROPERTY_RECEIPT_RECEIVER_ACCOUNT_ID,
  ReceiptAction.JSON_PROPERTY_ACTION_KIND,
  ReceiptAction.JSON_PROPERTY_ARGS
})
@JsonTypeName("ReceiptAction")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-23T12:57:16.263593+02:00[Europe/Kiev]")
public class ReceiptAction {
  public static final String JSON_PROPERTY_RECEIPT_ID = "receiptId";
  private String receiptId;

  public static final String JSON_PROPERTY_INDEX_IN_ACTION_RECEIPT = "indexInActionReceipt";
  private BigDecimal indexInActionReceipt;

  public static final String JSON_PROPERTY_RECEIPT_PREDECESSOR_ACCOUNT_ID = "receiptPredecessorAccountId";
  private String receiptPredecessorAccountId;

  public static final String JSON_PROPERTY_RECEIPT_RECEIVER_ACCOUNT_ID = "receiptReceiverAccountId";
  private String receiptReceiverAccountId;

  /**
   * Gets or Sets actionKind
   */
  public enum ActionKindEnum {
    CREATEACCOUNT("CreateAccount"),
    
    DEPLOYCONTRACT("DeployContract"),
    
    FUNCTIONCALL("FunctionCall"),
    
    TRANSFER("Transfer"),
    
    STAKE("Stake"),
    
    ADDKEY("AddKey"),
    
    DELETEKEY("DeleteKey"),
    
    DELETEACCOUNT("DeleteAccount");

    private String value;

    ActionKindEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ActionKindEnum fromValue(String value) {
      for (ActionKindEnum b : ActionKindEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ACTION_KIND = "actionKind";
  private ActionKindEnum actionKind;

  public static final String JSON_PROPERTY_ARGS = "args";
  private Object args;

  public ReceiptAction() { 
  }

  public ReceiptAction receiptId(String receiptId) {
    
    this.receiptId = receiptId;
    return this;
  }

   /**
   * Get receiptId
   * @return receiptId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_RECEIPT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getReceiptId() {
    return receiptId;
  }


  @JsonProperty(JSON_PROPERTY_RECEIPT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReceiptId(String receiptId) {
    this.receiptId = receiptId;
  }


  public ReceiptAction indexInActionReceipt(BigDecimal indexInActionReceipt) {
    
    this.indexInActionReceipt = indexInActionReceipt;
    return this;
  }

   /**
   * Get indexInActionReceipt
   * @return indexInActionReceipt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_INDEX_IN_ACTION_RECEIPT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getIndexInActionReceipt() {
    return indexInActionReceipt;
  }


  @JsonProperty(JSON_PROPERTY_INDEX_IN_ACTION_RECEIPT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIndexInActionReceipt(BigDecimal indexInActionReceipt) {
    this.indexInActionReceipt = indexInActionReceipt;
  }


  public ReceiptAction receiptPredecessorAccountId(String receiptPredecessorAccountId) {
    
    this.receiptPredecessorAccountId = receiptPredecessorAccountId;
    return this;
  }

   /**
   * Get receiptPredecessorAccountId
   * @return receiptPredecessorAccountId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_RECEIPT_PREDECESSOR_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getReceiptPredecessorAccountId() {
    return receiptPredecessorAccountId;
  }


  @JsonProperty(JSON_PROPERTY_RECEIPT_PREDECESSOR_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReceiptPredecessorAccountId(String receiptPredecessorAccountId) {
    this.receiptPredecessorAccountId = receiptPredecessorAccountId;
  }


  public ReceiptAction receiptReceiverAccountId(String receiptReceiverAccountId) {
    
    this.receiptReceiverAccountId = receiptReceiverAccountId;
    return this;
  }

   /**
   * Get receiptReceiverAccountId
   * @return receiptReceiverAccountId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_RECEIPT_RECEIVER_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getReceiptReceiverAccountId() {
    return receiptReceiverAccountId;
  }


  @JsonProperty(JSON_PROPERTY_RECEIPT_RECEIVER_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReceiptReceiverAccountId(String receiptReceiverAccountId) {
    this.receiptReceiverAccountId = receiptReceiverAccountId;
  }


  public ReceiptAction actionKind(ActionKindEnum actionKind) {
    
    this.actionKind = actionKind;
    return this;
  }

   /**
   * Get actionKind
   * @return actionKind
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ACTION_KIND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ActionKindEnum getActionKind() {
    return actionKind;
  }


  @JsonProperty(JSON_PROPERTY_ACTION_KIND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setActionKind(ActionKindEnum actionKind) {
    this.actionKind = actionKind;
  }


  public ReceiptAction args(Object args) {
    
    this.args = args;
    return this;
  }

   /**
   * Get args
   * @return args
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ARGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getArgs() {
    return args;
  }


  @JsonProperty(JSON_PROPERTY_ARGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setArgs(Object args) {
    this.args = args;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReceiptAction receiptAction = (ReceiptAction) o;
    return Objects.equals(this.receiptId, receiptAction.receiptId) &&
        Objects.equals(this.indexInActionReceipt, receiptAction.indexInActionReceipt) &&
        Objects.equals(this.receiptPredecessorAccountId, receiptAction.receiptPredecessorAccountId) &&
        Objects.equals(this.receiptReceiverAccountId, receiptAction.receiptReceiverAccountId) &&
        Objects.equals(this.actionKind, receiptAction.actionKind) &&
        Objects.equals(this.args, receiptAction.args);
  }

  @Override
  public int hashCode() {
    return Objects.hash(receiptId, indexInActionReceipt, receiptPredecessorAccountId, receiptReceiverAccountId, actionKind, args);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReceiptAction {\n");
    sb.append("    receiptId: ").append(toIndentedString(receiptId)).append("\n");
    sb.append("    indexInActionReceipt: ").append(toIndentedString(indexInActionReceipt)).append("\n");
    sb.append("    receiptPredecessorAccountId: ").append(toIndentedString(receiptPredecessorAccountId)).append("\n");
    sb.append("    receiptReceiverAccountId: ").append(toIndentedString(receiptReceiverAccountId)).append("\n");
    sb.append("    actionKind: ").append(toIndentedString(actionKind)).append("\n");
    sb.append("    args: ").append(toIndentedString(args)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

