/*
 * Sputnik v2 API
 * Sputnik v2 API Backend Server
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package api.app.astrodao.com.openapi.models;

import java.util.Objects;
import java.util.Arrays;
import api.app.astrodao.com.openapi.models.CommentReport;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Comment
 */
@JsonPropertyOrder({
  Comment.JSON_PROPERTY_ID,
  Comment.JSON_PROPERTY_DAO_ID,
  Comment.JSON_PROPERTY_PROPOSAL_ID,
  Comment.JSON_PROPERTY_REPORTS,
  Comment.JSON_PROPERTY_ACCOUNT_ID,
  Comment.JSON_PROPERTY_MESSAGE
})
@JsonTypeName("Comment")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-23T12:57:16.263593+02:00[Europe/Kiev]")
public class Comment {
  public static final String JSON_PROPERTY_ID = "id";
  private BigDecimal id;

  public static final String JSON_PROPERTY_DAO_ID = "daoId";
  private String daoId;

  public static final String JSON_PROPERTY_PROPOSAL_ID = "proposalId";
  private String proposalId;

  public static final String JSON_PROPERTY_REPORTS = "reports";
  private List<CommentReport> reports = new ArrayList<>();

  public static final String JSON_PROPERTY_ACCOUNT_ID = "accountId";
  private String accountId;

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private String message;

  public Comment() { 
  }

  public Comment id(BigDecimal id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(BigDecimal id) {
    this.id = id;
  }


  public Comment daoId(String daoId) {
    
    this.daoId = daoId;
    return this;
  }

   /**
   * Get daoId
   * @return daoId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DAO_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDaoId() {
    return daoId;
  }


  @JsonProperty(JSON_PROPERTY_DAO_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDaoId(String daoId) {
    this.daoId = daoId;
  }


  public Comment proposalId(String proposalId) {
    
    this.proposalId = proposalId;
    return this;
  }

   /**
   * Get proposalId
   * @return proposalId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PROPOSAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProposalId() {
    return proposalId;
  }


  @JsonProperty(JSON_PROPERTY_PROPOSAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProposalId(String proposalId) {
    this.proposalId = proposalId;
  }


  public Comment reports(List<CommentReport> reports) {
    
    this.reports = reports;
    return this;
  }

  public Comment addReportsItem(CommentReport reportsItem) {
    this.reports.add(reportsItem);
    return this;
  }

   /**
   * Get reports
   * @return reports
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_REPORTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<CommentReport> getReports() {
    return reports;
  }


  @JsonProperty(JSON_PROPERTY_REPORTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReports(List<CommentReport> reports) {
    this.reports = reports;
  }


  public Comment accountId(String accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAccountId() {
    return accountId;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public Comment message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMessage() {
    return message;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMessage(String message) {
    this.message = message;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Comment comment = (Comment) o;
    return Objects.equals(this.id, comment.id) &&
        Objects.equals(this.daoId, comment.daoId) &&
        Objects.equals(this.proposalId, comment.proposalId) &&
        Objects.equals(this.reports, comment.reports) &&
        Objects.equals(this.accountId, comment.accountId) &&
        Objects.equals(this.message, comment.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, daoId, proposalId, reports, accountId, message);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Comment {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    daoId: ").append(toIndentedString(daoId)).append("\n");
    sb.append("    proposalId: ").append(toIndentedString(proposalId)).append("\n");
    sb.append("    reports: ").append(toIndentedString(reports)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

